import { ApifyClient } from 'apify-client';
import CustomButton from './CustomButton';
import DarkWebAndSocialMediaMentionsCard from './DarkWebAndSocialMediaMentionsCard';
import SectionTitle from './SectionTitle';

const DarkWebAndSocialMediaMentions = async () => {
  const mentions = [
    {
      url: 'twitter.com/acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
    {
      url: 'reddit.com/r/acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
    {
      url: 'instagram.com/acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
    {
      url: 'tiktok.com/@acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
  ];

  // Initialize the ApifyClient with your Apify API token
  // Replace the '<YOUR_API_TOKEN>' with your token
  const client = new ApifyClient({
    token: ' apify_api_Fg3EwbIxRvoUMvKQp2YORhaoypUoc007jmoa',
  });

  // Prepare Actor input
  const input = {
    searchTerms: ['apify'],
    sort: 'Latest',
    maxItems: 2,
    twitterHandles: ['elonmusk', 'cnn'],
    startUrls: ['https://twitter.com/search?q=gpt&src=typed_query&f=live'],
  };

  // Run the Actor and wait for it to finish
  const run = await client.actor('apidojo/twitter-scraper-lite').call(input);

  // Fetch and print Actor results from the run's dataset (if any)
  console.log('Results from dataset');
  console.log(
    `ðŸ’¾ Check your data here: https://console.apify.com/storage/datasets/${run.defaultDatasetId}`,
  );
  const { items } = await client.dataset(run.defaultDatasetId).listItems();
  items.forEach((item) => {
    console.dir(item);
  });

  // Prepare Actor input
  const input = {
    query: 'Mausritter',
    search_type: 'posts',
    max_posts: 10,
    max_retries: 5,
    proxy: {
      useApifyProxy: false,
    },
  };

  // Run the Actor and wait for it to finish
  const run = await client.actor('danek/facebook-search-rental').call(input);

  // Fetch and print Actor results from the run's dataset (if any)
  console.log('Results from dataset');
  console.log(
    `ðŸ’¾ Check your data here: https://console.apify.com/storage/datasets/${run.defaultDatasetId}`,
  );
  const { items } = await client.dataset(run.defaultDatasetId).listItems();
  items.forEach((item) => {
    console.dir(item);
  });

  // Prepare Actor input
  const input = {
    search: 'restaurant',
    searchType: 'hashtag',
    searchLimit: 1,
  };

  // Run the Actor and wait for it to finish
  const run = await client.actor('apify/instagram-search-scraper').call(input);

  // Fetch and print Actor results from the run's dataset (if any)
  console.log('Results from dataset');
  console.log(
    `ðŸ’¾ Check your data here: https://console.apify.com/storage/datasets/${run.defaultDatasetId}`,
  );
  const { items } = await client.dataset(run.defaultDatasetId).listItems();
  items.forEach((item) => {
    console.dir(item);
  });

  return (
    <div className="border-[#3b4854] border-b-2 pb-8">
      <SectionTitle>Dark Web and Social Media Mentions</SectionTitle>
      {mentions.map((mention, index) => (
        <DarkWebAndSocialMediaMentionsCard
          key={index}
          url={mention.url}
          date={mention.date}
          mention={mention.text}
        />
      ))}
      <div className="flex gap-5 items-center justify-center mt-5">
        <CustomButton text="View More" />
        <CustomButton text="Download" />
      </div>
    </div>
  );
};

export default DarkWebAndSocialMediaMentions;


===============
'use client';
import { useEffect, useState } from 'react';
import CustomButton from './CustomButton';
import DarkWebAndSocialMediaMentionsCard from './DarkWebAndSocialMediaMentionsCard';
import SectionTitle from './SectionTitle';

const DarkWebAndSocialMediaMentions = () => {
  const [loading, setLoading] = useState(true);
  const mentions = [
    {
      url: 'twitter.com/acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
    {
      url: 'reddit.com/r/acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
    {
      url: 'instagram.com/acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
    {
      url: 'tiktok.com/@acme',
      date: '2022-01-02',
      text: 'Acme is a great company!',
    },
  ];

  const domain = 'google.com';

  // useEffect(() => {
  //   const fetchPosts = async () => {
  //     try {
  //       // instagram
  //       const instagramRes = await fetch('/api/fetchApifyPosts', {
  //         method: 'POST',
  //         body: JSON.stringify({
  //           input: {
  //             search: domain,
  //             searchType: 'hashtag',
  //             searchLimit: 1,
  //           },
  //           url: 'apify/instagram-search-scraper',
  //         }),
  //       });
  //       const instagramPosts = await instagramRes.json();
  //       console.log('instagram posts: ', instagramPosts);

  //       // twitter
  //       const twitterRes = await fetch('/api/fetchApifyPosts', {
  //         method: 'POST',
  //         body: JSON.stringify({
  //           input: {
  //             searchTerms: [
  //               domain, // replace with keyword domain
  //             ],
  //             sort: 'Latest',
  //             maxItems: 10,
  //           },
  //           url: 'apidojo/twitter-scraper-lite',
  //         }),
  //       });
  //       const twitterPosts = await twitterRes.json();
  //       console.log('twitter posts: ', twitterPosts);

  //       // facebook
  //       const facebookRes = await fetch('/api/fetchApifyPosts', {
  //         method: 'POST',
  //         body: JSON.stringify({
  //           input: {
  //             query: domain, // replace with domain keyword
  //             search_type: 'posts',
  //             recent_posts: true,
  //             max_posts: 10,
  //             max_retries: 5,
  //             proxy: {
  //               useApifyProxy: true,
  //             },
  //           },
  //           url: 'danek/facebook-search-rental',
  //         }),
  //       });
  //       const facebookPosts = await facebookRes.json();
  //       console.log('facebook posts: ', facebookPosts);

  //       // Dark Web - Facebook
  //       const darkwebFacebookRes = await fetch('/api/darkWebPosts', {
  //         method: 'POST',
  //         body: JSON.stringify({
  //           input: {
  //             keyword: 'facebook',
  //             amount: 10,
  //             from_date: '01/01/2025',
  //             to_date: '01/15/2025',
  //           },
  //           url: 'http://172.86.116.124:5002/scrape',
  //         }),
  //       });
  //       const darkwebFacebookPosts = await darkwebFacebookRes.json();
  //       console.log('darkweb Facebook posts: ', darkwebFacebookPosts);

  //       // Dark Web - XSS
  //       const darkwebXssRes = await fetch('/api/darkWebPosts', {
  //         method: 'POST',
  //         body: JSON.stringify({
  //           input: {
  //             keyword: 'Accounts',
  //             start_date: '2025-01-01',
  //             end_date: '2025-01-10',
  //           },
  //           url: 'http://172.86.116.124:5004/search_xss',
  //         }),
  //       });
  //       const darkwebXssPosts = await darkwebXssRes.json();
  //       console.log('darkweb Xss posts: ', darkwebXssPosts);

  //       // Dark Web - Stealer
  //       const darkwebStealerRes = await fetch('/api/darkWebPosts', {
  //         method: 'POST',
  //         body: JSON.stringify({
  //           input: {
  //             keyword: 'Stealer',
  //           },
  //           url: 'http://172.86.116.124:5003/search',
  //         }),
  //       });

  //       const darkwebStealerPosts = await darkwebStealerRes.json();
  //       console.log('darkweb Stealer posts: ', darkwebStealerPosts);
  //     } catch (error) {
  //       console.log('Something went wrong');
  //     } finally {
  //       setLoading(false);
  //     }
  //   };
  //   fetchPosts();
  // }, []);

  if (loading) {
    return (
      <div className="flex justify-center items-center">
        <svg
          className="animate-spin h-20 w-20 text-white"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
        >
          <circle
            className="opacity-25"
            cx="12"
            cy="12"
            r="10"
            stroke="currentColor"
            strokeWidth="4"
          ></circle>
          <path
            className="opacity-75"
            fill="currentColor"
            d="M4 12a8 8 0 018-8v8H4z"
          ></path>
        </svg>
      </div>
    );
  }

  return (
    <div className="border-[#3b4854] border-b-2 pb-8">
      <SectionTitle>Dark Web and Social Media Mentions</SectionTitle>
      {mentions.map((mention, index) => (
        <DarkWebAndSocialMediaMentionsCard
          key={index}
          url={mention.url}
          date={mention.date}
          mention={mention.text}
        />
      ))}
      <div className="flex gap-5 items-center justify-center mt-5">
        <CustomButton text="View More" />
        <CustomButton text="Download" />
      </div>
    </div>
  );
};

export default DarkWebAndSocialMediaMentions;
